<div
  class="visible fixed w-full h-screen z-20 bg-[rgba(0,0,0,0.8)] hidden opacity-0 transition-[opacity] duration-300"
  id="--enter-overlay-bg"
>
  <div
  id="--enter-overlay-items"
  class="navbar-home block visible text-white m-0 fixed w-screen h-screen z-30"
  >
  <ul class="flex flex-col items-center justify-center h-screen px-2">
    {/* Inicio */}
    <li class="my-1">
      <a
        href="/inicio"
        class="text-xl lg:text-3xl poppins-bold uppercase hover:text-gray-300 hover:transition-all duration-300 m-0"
      >
        <div class="flex items-center">
          <!-- <span class="pe-3"><IoSearchOutline /></span> -->
          <span>Inicio</span>
        </div>
      </a>
    </li>

    {/* Marcas */}
    <li class="my-3"></li>
    <li class="my-1">
      <a
        href="/toyota"
        class="text-xl lg:text-3xl poppins-bold uppercase hover:text-gray-300 hover:transition-all duration-300 m-0"
      >
        <div class="flex items-center">
          <!-- <span class="pe-3"><IoSearchOutline /></span> -->
          <span>Toyota</span>
        </div>
      </a>
    </li>
    <li class="my-1">
      <a
        href="/cubitt"
        class="text-xl lg:text-3xl poppins-bold uppercase hover:text-gray-300 hover:transition-all duration-300 m-0"
      >
        <div class="flex items-center">
          <!-- <span class="pe-3"><IoSearchOutline /></span> -->
          <span>Cubitt</span>
        </div>
      </a>
    </li>
    <li class="my-1">
      <a
        href="/hps"
        class="text-xl lg:text-3xl poppins-bold uppercase hover:text-gray-300 hover:transition-all duration-300 m-0"
      >
        <div class="flex items-center">
          <!-- <span class="pe-3"><IoSearchOutline /></span> -->
          <span>HPS</span>
        </div>
      </a>
    </li>
    <li class="my-1">
      <a
        href="/zusset"
        class="text-xl lg:text-3xl poppins-bold uppercase hover:text-gray-300 hover:transition-all duration-300 m-0"
      >
        <div class="flex items-center">
          <!-- <span class="pe-3"><IoSearchOutline /></span> -->
          <span>Zusset</span>
        </div>
      </a>
    </li>

    {/* Top */}
    <li class="my-3"></li>
    <li class="my-1">
      <a
        href="/top/videos"
        class="text-xl lg:text-3xl poppins-bold uppercase hover:text-gray-300 hover:transition-all duration-300 m-0"
      >
        <div class="flex items-center">
          <!-- <span class="pe-3"><IoSearchOutline /></span> -->
          <span>Top Vídeos</span>
        </div>
      </a>
    </li>
    <li class="my-1">
      <a
        href="/top/fotos"
        class="text-xl lg:text-3xl poppins-bold uppercase hover:text-gray-300 hover:transition-all duration-300 m-0"
      >
        <div class="flex items-center">
          <!-- <span class="pe-3"><IoSearchOutline /></span> -->
          <span>Top Fotos</span>
        </div>
      </a>
    </li>

    {/* Yo */}
    <li class="my-3"></li>
    <li class="my-1">
      <a
        href="/acerca"
        class="text-xl lg:text-3xl poppins-bold uppercase hover:text-gray-300 hover:transition-all duration-300 m-0"
      >
        <div class="flex items-center">
          <!-- <span class="pe-3"><IoSearchOutline /></span> -->
          <span>Sobre mí</span>
        </div>
      </a>
    </li>
    <li class="my-1">
      <a
        href="/contacto"
        class="text-xl lg:text-3xl poppins-bold uppercase hover:text-gray-300 hover:transition-all duration-300 m-0"
      >
        <div class="flex items-center">
          <!-- <span class="pe-3"><IoSearchOutline /></span> -->
          <span>Contacto</span>
        </div>
      </a>
    </li>
  </ul>
  </div>
</div>
<script>
  let stateMobileMenuOpen: boolean = false;

  let __enter_overlay_container!: HTMLElement;
  // let __c2dev_navbar_hamburger!: HTMLElement;
  // let __enter_overlay_items!: HTMLElement;

  const enterMenu = (() => {
    const _updateEnterMenu = (stateMobileOpen: boolean) => {
      const __inner = (isOpen: boolean) => {
        const bgVis = (isOpen: boolean) => {
          return isOpen ? "block" : "hidden";
        };
        const itemVis = (isOpen: boolean) => {
          return isOpen ? "opacity-100" : "opacity-0";
        };
        const onNext = (isOpen: boolean, f: () => void) => {
          if (isOpen) {
            window.requestAnimationFrame(f);
          } else {
            window.setTimeout(f, 310);
          }
        };

        const classReplace1 = isOpen ? bgVis : itemVis;
        const classReplace2 = isOpen ? itemVis : bgVis;
        
        __enter_overlay_container.classList.replace(
          classReplace1(!isOpen),
          classReplace1(isOpen)
        );
        onNext(isOpen, () => {
          console.log("aaaaa");
          __enter_overlay_container.classList.replace(
            classReplace2(!isOpen),
            classReplace2(isOpen)
          );
        });
      };

      __inner(stateMobileOpen);
      return stateMobileOpen;
    };
    const toggle = () => {
      stateMobileMenuOpen = _updateEnterMenu(!stateMobileMenuOpen);
    };
    const open = () => {
      stateMobileMenuOpen = true;
      _updateEnterMenu(true);
    };
    const close = () => {
      stateMobileMenuOpen = false;
      _updateEnterMenu(false);
    };

    return { toggle: toggle, open: open, close: close };
  })();

  document.addEventListener("DOMContentLoaded", (_event) => {
    __enter_overlay_container = document.getElementById("--enter-overlay-bg")!!;
    // __enter_overlay_items = document.getElementById("--enter-overlay-items")!!;

    __enter_overlay_container.addEventListener("click", enterMenu.close);
    document.querySelectorAll("[data-enter-menu-action='open']")!!.forEach(element => {
      element.addEventListener("click", enterMenu.open);
    });
    document.querySelectorAll("[data-enter-menu-action='toggle']")!!.forEach(element => {
      element.addEventListener("click", enterMenu.toggle);
    });
  });
</script>